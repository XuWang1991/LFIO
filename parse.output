Nonterminals useless in grammar

   examples
   rules
   sigle_head


Terminals unused in grammar

   '['
   ']'


语法

    0 $accept: program $end

    1 program: statements

    2 statements: statements CH
    3           | statements rule '.'
    4           | statements example '.'
    5           | %empty

    6 example: '{' input ';' output '}'

    7 input: input ',' sigle_input
    8      | sigle_input

    9 output: output ',' sigle_output
   10       | sigle_output

   11 sigle_input: atom
   12            | NOT atom

   13 sigle_output: atom
   14             | NOT atom

   15 rule: head
   16     | head IF tail

   17 tail: tail ',' body
   18     | body

   19 head: atom

   20 body: atom
   21     | NOT atom

   22 atom: IDENTIFIER '(' argulist ')'
   23     | IDENTIFIER

   24 argulist: argulist ',' argument
   25         | argument

   26 argument: IDENTIFIER
   27         | NUMBER
   28         | VARIABLE


Terminals, with rules where they appear

$end (0) 0
'(' (40) 22
')' (41) 22
',' (44) 7 9 17 24
'.' (46) 3 4
';' (59) 6
'[' (91)
']' (93)
'{' (123) 6
'}' (125) 6
error (256)
IDENTIFIER (258) 22 23 26
NUMBER (259) 27
IF (260) 16
CH (261) 2
VARIABLE (262) 28
NOT (263) 12 14 21


Nonterminals, with rules where they appear

$accept (18)
    左： 0
program (19)
    左： 1, 右： 0
statements (20)
    左： 2 3 4 5, 右： 1 2 3 4
example (21)
    左： 6, 右： 4
input (22)
    左： 7 8, 右： 6 7
output (23)
    左： 9 10, 右： 6 9
sigle_input (24)
    左： 11 12, 右： 7 8
sigle_output (25)
    左： 13 14, 右： 9 10
rule (26)
    左： 15 16, 右： 3
tail (27)
    左： 17 18, 右： 16 17
head (28)
    左： 19, 右： 15 16
body (29)
    左： 20 21, 右： 17 18
atom (30)
    左： 22 23, 右： 11 12 13 14 19 20 21
argulist (31)
    左： 24 25, 右： 22 24
argument (32)
    左： 26 27 28, 右： 24 25


State 0

    0 $accept: . program $end

    $default  reduce using rule 5 (statements)

    program     转到状态 1
    statements  转到状态 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: statements .
    2 statements: statements . CH
    3           | statements . rule '.'
    4           | statements . example '.'

    IDENTIFIER  shift, and go to state 4
    CH          shift, and go to state 5
    '{'         shift, and go to state 6

    $default  reduce using rule 1 (program)

    example  转到状态 7
    rule     转到状态 8
    head     转到状态 9
    atom     转到状态 10


State 3

    0 $accept: program $end .

    $default  接受


State 4

   22 atom: IDENTIFIER . '(' argulist ')'
   23     | IDENTIFIER .

    '('  shift, and go to state 11

    $default  reduce using rule 23 (atom)


State 5

    2 statements: statements CH .

    $default  reduce using rule 2 (statements)


State 6

    6 example: '{' . input ';' output '}'

    IDENTIFIER  shift, and go to state 4
    NOT         shift, and go to state 12

    input        转到状态 13
    sigle_input  转到状态 14
    atom         转到状态 15


State 7

    4 statements: statements example . '.'

    '.'  shift, and go to state 16


State 8

    3 statements: statements rule . '.'

    '.'  shift, and go to state 17


State 9

   15 rule: head .
   16     | head . IF tail

    IF  shift, and go to state 18

    $default  reduce using rule 15 (rule)


State 10

   19 head: atom .

    $default  reduce using rule 19 (head)


State 11

   22 atom: IDENTIFIER '(' . argulist ')'

    IDENTIFIER  shift, and go to state 19
    NUMBER      shift, and go to state 20
    VARIABLE    shift, and go to state 21

    argulist  转到状态 22
    argument  转到状态 23


State 12

   12 sigle_input: NOT . atom

    IDENTIFIER  shift, and go to state 4

    atom  转到状态 24


State 13

    6 example: '{' input . ';' output '}'
    7 input: input . ',' sigle_input

    ';'  shift, and go to state 25
    ','  shift, and go to state 26


State 14

    8 input: sigle_input .

    $default  reduce using rule 8 (input)


State 15

   11 sigle_input: atom .

    $default  reduce using rule 11 (sigle_input)


State 16

    4 statements: statements example '.' .

    $default  reduce using rule 4 (statements)


State 17

    3 statements: statements rule '.' .

    $default  reduce using rule 3 (statements)


State 18

   16 rule: head IF . tail

    IDENTIFIER  shift, and go to state 4
    NOT         shift, and go to state 27

    tail  转到状态 28
    body  转到状态 29
    atom  转到状态 30


State 19

   26 argument: IDENTIFIER .

    $default  reduce using rule 26 (argument)


State 20

   27 argument: NUMBER .

    $default  reduce using rule 27 (argument)


State 21

   28 argument: VARIABLE .

    $default  reduce using rule 28 (argument)


State 22

   22 atom: IDENTIFIER '(' argulist . ')'
   24 argulist: argulist . ',' argument

    ')'  shift, and go to state 31
    ','  shift, and go to state 32


State 23

   25 argulist: argument .

    $default  reduce using rule 25 (argulist)


State 24

   12 sigle_input: NOT atom .

    $default  reduce using rule 12 (sigle_input)


State 25

    6 example: '{' input ';' . output '}'

    IDENTIFIER  shift, and go to state 4
    NOT         shift, and go to state 33

    output        转到状态 34
    sigle_output  转到状态 35
    atom          转到状态 36


State 26

    7 input: input ',' . sigle_input

    IDENTIFIER  shift, and go to state 4
    NOT         shift, and go to state 12

    sigle_input  转到状态 37
    atom         转到状态 15


State 27

   21 body: NOT . atom

    IDENTIFIER  shift, and go to state 4

    atom  转到状态 38


State 28

   16 rule: head IF tail .
   17 tail: tail . ',' body

    ','  shift, and go to state 39

    $default  reduce using rule 16 (rule)


State 29

   18 tail: body .

    $default  reduce using rule 18 (tail)


State 30

   20 body: atom .

    $default  reduce using rule 20 (body)


State 31

   22 atom: IDENTIFIER '(' argulist ')' .

    $default  reduce using rule 22 (atom)


State 32

   24 argulist: argulist ',' . argument

    IDENTIFIER  shift, and go to state 19
    NUMBER      shift, and go to state 20
    VARIABLE    shift, and go to state 21

    argument  转到状态 40


State 33

   14 sigle_output: NOT . atom

    IDENTIFIER  shift, and go to state 4

    atom  转到状态 41


State 34

    6 example: '{' input ';' output . '}'
    9 output: output . ',' sigle_output

    '}'  shift, and go to state 42
    ','  shift, and go to state 43


State 35

   10 output: sigle_output .

    $default  reduce using rule 10 (output)


State 36

   13 sigle_output: atom .

    $default  reduce using rule 13 (sigle_output)


State 37

    7 input: input ',' sigle_input .

    $default  reduce using rule 7 (input)


State 38

   21 body: NOT atom .

    $default  reduce using rule 21 (body)


State 39

   17 tail: tail ',' . body

    IDENTIFIER  shift, and go to state 4
    NOT         shift, and go to state 27

    body  转到状态 44
    atom  转到状态 30


State 40

   24 argulist: argulist ',' argument .

    $default  reduce using rule 24 (argulist)


State 41

   14 sigle_output: NOT atom .

    $default  reduce using rule 14 (sigle_output)


State 42

    6 example: '{' input ';' output '}' .

    $default  reduce using rule 6 (example)


State 43

    9 output: output ',' . sigle_output

    IDENTIFIER  shift, and go to state 4
    NOT         shift, and go to state 33

    sigle_output  转到状态 45
    atom          转到状态 36


State 44

   17 tail: tail ',' body .

    $default  reduce using rule 17 (tail)


State 45

    9 output: output ',' sigle_output .

    $default  reduce using rule 9 (output)
